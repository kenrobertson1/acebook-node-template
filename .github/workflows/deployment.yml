name: CI/CD

on: [push]
jobs:
  setup-environment:
    name: CI Pipeline
    runs-on: ubuntu-latest
   
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v2
      
      - name: Install dependencies
        run: npm install

      - name: use cache 
        uses: actions/cache@v2
        with:
          path: "./*"
          key: ${{ github.sha }}

  lint-run:
    needs: setup-environment
    runs-on: ubuntu-latest
    steps:
      - name: use cache 
        uses: actions/cache@v2
        with:
          path: "./*"
          key: ${{ github.sha }}

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.7.0

      - name: Lint run
        run: npm run lint

  jest-run:
    needs: setup-environment
    runs-on: ubuntu-latest
    steps:
      - name: use cache 
        uses: actions/cache@v2
        with:
          path: "./*"
          key: ${{ github.sha }}

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.7.0

      - name: Jest run
        run: npm run test:unit

  cypress-run:
    needs: setup-environment
    runs-on: ubuntu-latest
    steps:
      - name: use cache 
        uses: actions/cache@v2
        with:
          path: "./*"
          key: ${{ github.sha }}

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.7.0

      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          start: npm run start:test
          wait-on: http://localhost:3030 

  deploy:
    name: CD Pipeline
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
        node-version: ['18.x']
        appname: ['acebook-template-app']
        deploy-group: ['acebook-template-group']
        s3-bucket: ['acebook-s3-template']
        s3-filename: ['acebook-app']

    needs: setup-environment, lint-run, jest-run, cypress-run
    steps:
      - uses: actions/checkout@v2

      # Initialize Node.js
      - name: Install Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      # Install project dependencies and build
      - name: Install dependencies
        run: npm install

      # Install AWS CLI 2
      - name: Install AWS CLI 2
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update
      # Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      # Deploy push to AWS S3
      - name: AWS Deploy push
        run: |
          aws deploy push \
          --application-name ${{ matrix.appname }} \
          --description "This is a revision for the ${{ matrix.appname }}-${{ github.sha }}" \
          --ignore-hidden-files \
          --s3-location s3://${{ matrix.s3-bucket }}/${{ matrix.s3-filename }}.zip \
          --source .
      # Create deployment to CodeDeploy
      - name: AWS Create Deployment
        run: |
          aws deploy create-deployment \
           --application-name ${{ matrix.appname }} \
           --deployment-config-name CodeDeployDefault.OneAtATime \
           --deployment-group-name ${{ matrix.deploy-group }} \
           --file-exists-behavior OVERWRITE \
           --s3-location bucket=${{ matrix.s3-bucket }},key=${{ matrix.s3-filename }}.zip,bundleType=zip \
